.container {
    max-width: 120rem; // use max-width so container can decrease/shrink if theres not enough space to display our 120rem aka 1200px; if the viewport is less than 1200px then we occupy 100% of the available viewport width  
    margin: 8rem auto; // centers the container inside its parent element <body>
    background-color: var(--color-grey-light-1);
    box-shadow: var(--shadow-dark);

    min-height: 50rem; // testing purposes

    @media only screen and (max-width: $bp-largest) {
        margin: 0;
        max-width: 100%;
        width: 100%;
        height: 100%;
    }
}

.header {
    font-size: 1.4rem;
    height: 7rem;
    background-color: #fff;
    border-bottom: var(--line); // adds a line at bottom with (width, type, color)

    //flexbox for header elements
    display: flex;
    justify-content: space-between; // aligns elements along X-axis (main-axis) with space between each element |1-------2-------3|
    align-items: center; // centers items along Y-axis (cross-axis)

    @media only screen and (max-width: $bp-smallest) {
        flex-wrap: wrap; // used with order: 1; for searchbar, this moves the searchbar to its own row
        align-content: space-around; // adds space between rows
        height: 11rem; // gives more space for the header content
    }
}

.content {
    display: flex;

    @media only screen and (max-width: $bp-medium) {
        flex-direction: column;
    }
}

.sidebar {
    background-color: var(--color-grey-dark-1);

    flex: 0 0 18%; // grow (integer), shrink (integer), basis (length--% or px); these values mean we don't want the element to grow if theres space, nor shrink if there's not enough space, but we always want to keep it at 18%; Since it's a %-percentage, it's okay to say we don't want it to shrink because it will automatically shrink bc its a %value; Lecture 74@10:20min

    // use flex to change the items (icons/text and legal text) main axis to vertical by using flex-direction: column
    // this will now allow you to justify-content: space-between vertically -- icons at the top, legal text at the bottom
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.hotel-view {
    background-color: #fff;

    // test
    // background-color: orangered;
    // height: 80rem; // removed for detail container to have its actual height; used only for testing the other layouts

    flex: 1; // occupy/grow in the entire space (entire row) -- 100% - 18% = 82% space occupied
}

.detail {
    font-size: 1.4rem;
    display: flex;
    padding: 4.5rem; // adds padding/margin on top & bottom -- no need for the sides since we have margin-righ:4.5rem already from the description box
    background-color: var(--color-grey-light-1);
    border-bottom: var(--line);

    @media only screen and (max-width: $bp-medium) {
        padding: 3rem;
    }

    @media only screen and (max-width: $bp-small) {
        flex-direction: column;
    }
}

.description {
    // font-size: 1.4rem; // instead of having this on .user-reviews AND .description, we can add it to the parent -- .detail{}
    box-shadow: var(--shadow-light); // box shadow around description box (not the detail container)
    padding: 3rem;
    flex: 0 0 60%; // occupy 60% of the space
    margin-right: 4.5rem; // adds space between description container and user-reviews container

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-right: 3rem;
    }

    @media only screen and (max-width: $bp-small) {
        margin-right: 0;
        margin-bottom: 3rem;
    }
}

.user-reviews {
    // background-color: yellowgreen;
    // font-size: 1.4rem; // instead of having this on .user-reviews AND .description, we can add it to the parent -- .detail{}

    flex: 1; // occupy the rest of the space, 40%

    // centering the 'show all' inline button along with the user review containers without using text-align; if we use text-align then it will also align our users text quotes as well which is something we dont want
    display: flex;
    flex-direction: column;
    align-items: center;
}